# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and test CI
run-name: ${{ github.actor }} Build and test CI

on:
  push:
    branches: ["main", "staging", "add-image-service"]
  pull_request:
    branches: ["main", "staging"]

jobs:
  build:
    runs-on: ubuntu-latest
  
    env:
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/test"
      JWT_SECRET: "s#cret"
    
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#       - uses: actions/checkout@v3
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#           cache: "npm"
#       - run: npm ci
#       - run: cd src/client && npm ci
#       - run: cd .. & cd ..
#       - run: npm run build --if-present
#       - run: npm run test --if-present
      
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Install server side dependencies
        run: npm ci
      - run: npm install docker-compose
      - name: Install client side dependencies
        run: cd src/client && npm ci
      - run: cd .. & cd ..
      - name: Start test database
        run: docker compose -f .devcontainer/docker-compose.yml up -d test-db
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
          PGHOST: localhost
          PGPORT: 5432
#       - name: Wait for test database to start
#         run: docker compose exec test-db pg_isready -d test
      - name: Run database migrations
        run: npm run migrate:prisma
      - name: Run build if present
        run: npm run build --if-present
      - name: Run tests if present
        run: npm run test --if-present
      - name: Stop test database
        run: docker compose down
