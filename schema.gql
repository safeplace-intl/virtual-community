# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AccountResponse {
  message: String!
  statusCode: Float!
}

type AuthPayload {
  tokens: TokensPayload!
  user: User!
}

type BooleanProfileField {
  value: Boolean!
  visibleTo: PrivacyOption!
}

input BooleanProfileFieldInput {
  value: Boolean!
  visibleTo: PrivacyOption!
}

input ChangePasswordInput {
  email: String!
  newPassword: String!
  oldPassword: String!
}

input CreateUserInput {
  email: String!
  fullName: StringScalar!
  password: String!
  pronouns: String
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  changePassword(changePasswordInput: ChangePasswordInput!): User!
  createUser(createUserInput: CreateUserInput!): AuthPayload!
  deactivateAccount(email: String!): AccountResponse!
  deleteAccount(id: Float!): AccountResponse!
  login(loginInput: LoginInput!): AuthPayload!
  refreshToken(refreshTokenInput: RefreshTokenInput!): TokensPayload!
  resetPassword(resetPasswordInput: ResetPasswordInput!): User!
  updateProfile(updateProfileInput: UpdateProfileInput!): Profile!
}

type NumberProfileField {
  value: Float!
  visibleTo: PrivacyOption!
}

input NumberProfileFieldInput {
  value: Float!
  visibleTo: PrivacyOption!
}

enum PrivacyOption {
  Community
  Friends
  Groups
}

type Profile {
  bio: StringProfileField
  currentLocation: StringProfileField
  fullName: StringProfileField!
  homeCountry: StringProfileField
  id: Float!
  namePronunciation: StringProfileField
  nickname: StringProfileField
  profileImage: String
  profilePic: StringProfileField
  pronouns: StringProfileField
  tdaGradYear: NumberProfileField
  tdaGradYearBannerVisible: BooleanProfileField
  userId: Float!
  website: StringProfileField
}

type Query {
  deleteProfileImageAndRestoreDefault: S3MessageResponse!
  getS3SignedUrl: S3SignedUrlResponse!
  getUser(userId: Float!): User
}

input RefreshTokenInput {
  refreshToken: String!
  userId: Float!
}

input ResetPasswordInput {
  email: String!
  newPassword: String!
}

type S3MessageResponse {
  message: String!
  statusCode: Float!
}

type S3SignedUrlResponse {
  signedUrl: String!
  statusCode: Float!
}

type StringProfileField {
  value: String!
  visibleTo: PrivacyOption!
}

input StringProfileFieldInput {
  value: String!
  visibleTo: PrivacyOption!
}

scalar StringScalar

type TokensPayload {
  accessToken: String!
  refreshToken: String!
}

input UpdateProfileInput {
  bio: StringProfileFieldInput
  currentLocation: StringProfileFieldInput
  fullName: StringProfileFieldInput
  homeCountry: StringProfileFieldInput
  namePronunciation: StringProfileFieldInput
  nickname: StringProfileFieldInput
  pronouns: StringProfileFieldInput
  tdaGradYear: NumberProfileFieldInput
  tdaGradYearBannerVisible: BooleanProfileFieldInput
  website: StringProfileFieldInput
}

type User {
  email: String!
  id: Int!
  isActive: Boolean!
  passwordHash: String!
  profile: Profile!
}